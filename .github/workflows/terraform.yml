# GitHub Actions Workflow for Terraform Infrastructure Deployment
name: 'Terraform Infrastructure'

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  TF_VERSION: '1.6.0'
  WORKING_DIR: './terraform/environments/dev'

jobs:
  terraform-check:
    name: 'Terraform Check'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Format
      run: terraform fmt -check -recursive
      working-directory: ./terraform

    - name: Terraform Init
      run: terraform init -backend=false
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{ env.WORKING_DIR }}

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCE_GROUP }}" \
          -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=dev.terraform.tfstate"
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Plan
      run: terraform plan -var-file="terraform.tfvars" -no-color
      working-directory: ${{ env.WORKING_DIR }}

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: development
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCE_GROUP }}" \
          -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=dev.terraform.tfstate"
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Apply
      run: terraform apply -var-file="terraform.tfvars" -auto-approve
      working-directory: ${{ env.WORKING_DIR }}

    - name: Terraform Output
      run: terraform output
      working-directory: ${{ env.WORKING_DIR }}